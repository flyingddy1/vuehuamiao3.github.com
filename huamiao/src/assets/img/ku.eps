%!PS-Adobe-3.0 EPSF-3.0
%%For: admin
%%CreationDate: Tue Jun 20 14:51:15 2017
%%Title: generated by sK1
%%Creator: sK1 1.1.5
%%Pages: 1
%%BoundingBox: 37 72 776 716
%%Extensions: CMYK
%%DocumentSuppliedResources: (atend)
%%EndComments

%%BeginProlog
%%BeginResource: procset Linux-sK-Procset 1.0 2
/SketchDict 100 dict def
SketchDict begin
/bd { bind def } bind def
/x { exch } bd
/xd { exch def } bd
/PI 3.14159265358979323846264338327 def
/radgrad { 180 mul PI div } bd
/skstartmatrix matrix currentmatrix def
/tmpmat matrix def
/ISOLatin1Encoding dup where
{ pop pop }
{  [/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /minus /period
/slash /zero /one /two /three /four /five /six /seven /eight /nine /colon
/semicolon /less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J
/K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i
/j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /dotlessi /grave /acute /circumflex /tilde /macron /breve
/dotaccent /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek
/caron /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
/registered /macron /degree /plusminus /twosuperior /threesuperior /acute /mu
/paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown /Agrave /Aacute /Acircumflex
/Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute /Ecircumflex
/Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde /Ograve
/Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute
/Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute
/acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute
/ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
/ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] def
}
ifelse
/arct dup where
{pop pop}
{
/arct {arcto pop pop pop pop} bd
}
ifelse
/size 0 def
/fontname 0 def
/newfont 0 def
/sf {
/size xd
/fontname xd
fontname findfont
dup /Encoding get StandardEncoding eq
{
dup
length dict /newfont xd
{
1 index
/FID ne
{ newfont 3 1 roll put }
{ pop pop }
ifelse
} forall
newfont /Encoding ISOLatin1Encoding put
fontname newfont definefont
}
if
size scalefont setfont
} bd
/pusht {matrix currentmatrix} bd
/popt {setmatrix} bd
/pushc {gsave} bd
/popc {grestore} bd
/rgb {setrgbcolor} bd
/cmyk {setcmykcolor} bd
/w { setlinewidth } bd
/j { setlinejoin } bd
/J { setlinecap } bd
/d { setdash } bd
/F { eofill } bd
/f { closepath F } bd
/S {
pusht
skstartmatrix setmatrix stroke 
popt
} bd
/s { closepath S } bd
/m { moveto } bd
/l { lineto } bd
/c { curveto } bd
/txt {
/tmpmat tmpmat currentmatrix def
dup type /arraytype eq {concat} {translate} ifelse
0 0 m
tmpmat
} bd
/T {txt x show popt} bd
/P {txt x true charpath popt} bd
/TP {txt x dup show 0 0 m true charpath popt} bd
/C {newpath 0 360 arc} bd
/R {
2 copy m
x 2 index l
x 2 index x l
l
closepath
} bd
/ellipse { 
dup type /arraytype eq
{
pusht x concat
0 0 1.0 C 
popt
}	
{
pusht 5 1 roll
4 -1 roll concat
newpath
dup 2 eq {
0 0 m 
} if 
3 1 roll
radgrad x
radgrad x
0 0 1   5 -2 roll
arc
0 ne { closepath } if
popt
}
ifelse
} bd
/radius1 0 def
/radius2 0 def
/factor 0 def
/rect {
dup type /arraytype eq
{
pusht x concat
0 0 m  1 0 l  1 1 l  0 1 l  closepath
popt
}
{
/radius2 xd
/radius1 xd
pusht x concat
radius1 radius2 div  1  scale
0 radius2 m
0 1  radius2 1  radius2  arct
radius2 radius1 div
dup 1  1 index 0  radius2  arct
0  0 0  radius2  arct
0 0  0 1  radius2 arct
closepath
popt
}
ifelse
} bd
/buf 0 def
/width 0 def
/height 0 def
/skcimg {
/tmpmat tmpmat currentmatrix def
{ concat } if
/height xd
/width xd
/buf width 3 mul string def
width height scale
width height 8
[width	 0   0	 height neg	  0  height]
{ currentfile buf readhexstring pop } bind
false 3 colorimage
tmpmat setmatrix
} bd
/skgimg {
/tmpmat tmpmat currentmatrix def
{ concat } if
/height xd
/width xd
/buf width string def
width height scale
width height 8
[width	 0   0	 height neg	  0  height]
{ currentfile buf readhexstring pop } bind
image
tmpmat setmatrix
} bd
/rclip {
4 2 roll m
dup 0 x rlineto
x 0 rlineto
neg 0 x rlineto
closepath
clip
} bd
/skeps {
10 dict begin
/sk_state save def
concat
3 index neg 3 index neg translate
rclip
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
10 setmiterlimit [ ] 0 setdash
newpath
/sk_dict_count countdictstack def
/sk_count count 1 sub def
userdict begin
/showpage { } def
/languagelevel where
{
pop
languagelevel 1 ne
{
false setstrokeadjust
false setoverprint
} if
} if
} bd 
/skepsend {
count sk_count sub { pop } repeat
countdictstack sk_dict_count sub { end } repeat
sk_state restore
end
} bd
/gradidx 0 def
/gradient { 
3 mul array
/gradidx 0 def
} bd
/$ {
3 index gradidx       5 -1 roll put 
2 index gradidx 1 add 4 -1 roll put 
1 index gradidx 2 add 3 -1 roll put 
/gradidx gradidx 3 add def
} bd
/! { 
3 
{
dup dup gradidx dup 3 1 roll 3 sub get put
/gradidx gradidx 1 add def
}
repeat
} bd
/gradcolor {
3 mul dup 2 add 1 exch	% idx  1  idx+2
{
1 index exch	% array array i
get		% array component
exch		% component array
}
for
4 1 roll
} bd
/x0 0 def /y0 0 def /x1 0 def /y1 0 def
/left 0 def /right 0 def /top 0 def /bottom 0 def
/numcolors 0 def
/axial	{
/y1 xd /x1 xd /y0 xd /x0 xd
dup length 3 idiv /numcolors xd
pusht exch  % ctm array
x0 x1 ne y0 y1 ne or
{
x0 y0 translate
[x1 x0 sub  y1 y0 sub	dup neg    2 index    0	    0] concat
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
newpath
0 gradcolor rgb clippath f
0 1 numcolors 1 sub
{
dup numcolors div
3 1 roll
gradcolor rgb
exch
bottom right top R f
}
for
}
if 
pop
popt
} bd
/r0 0 def /r1 0 def /dr 0 def
/radial	{
/r1 xd /r0 xd /y0 xd /x0 xd
/dr r1 r0 sub def
dup length 3 idiv /numcolors xd
pusht exch  % ctm array
r0 r1 ne
{
x0 y0 translate
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
newpath
dr 0 gt {numcolors 1 sub}{0} ifelse gradcolor rgb
clippath f
dr 0 gt {numcolors 1 sub -1 0} { 0 1 numcolors 1 sub} ifelse
{
dup numcolors div dr mul r0 add
3 1 roll
gradcolor rgb
exch
0 0 3 -1 roll C f
}
for
}
if 
pop
popt
} bd
/max {
2 copy lt {exch} if pop
} bd
/conical {
pusht 5 1 roll
3 1 roll /y0 xd /x0 xd
x0 y0 translate
radgrad rotate
dup length 3 idiv /numcolors xd
clippath flattenpath pathbbox newpath
4 { abs 4 1 roll} repeat
3 { max } repeat
2 mul
dup scale
0 gradcolor rgb
0 0 1 0 360 arc f
1 1 numcolors 1 sub
{
dup numcolors div 180 mul
3 1 roll
gradcolor rgb
exch
0 0 moveto
0 0 1  4 -1 roll  dup neg  arc
closepath f
}
for
pop
popt
} bd
/XStep 0 def /YStep 0 def /imagedata 0 def /components 0 def
/tileimage2 {
exch 4 2 roll
/height xd
/width xd
mark
/components 2 index
/PatternType 1
/PaintType 1
/TilingType 1
/BBox [0 0 width height]
/XStep width
/YStep height
/PaintProc {
begin
XStep YStep 8
matrix
imagedata
false
components
colorimage
end
}
counttomark 2 div cvi dup dict begin
{ def } repeat
pop currentdict end
dup
/imagedata
4 -1 roll
width height mul mul string
currentfile exch readhexstring pop
put
exch
makepattern
setpattern
clippath
eofill
} bd
/tileimage1 {
concat
/components xd
/height xd
/width xd
/imagedata
currentfile
width height mul components mul string
readhexstring pop
def
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
left width div floor width mul
bottom height div floor height mul
translate
top bottom sub height div ceiling cvi
{
gsave
right left sub width div ceiling cvi
{
width height 8 matrix
components 1 eq
{
{ imagedata }
image
}
{
imagedata
false components
colorimage
}
ifelse
width 0 translate
}
repeat
grestore
0 height translate
}
repeat
} bd
/makepattern where
{
pop
/tileimage /tileimage2 load def
}
{
/tileimage /tileimage1 load def
}
ifelse
end
%%EndResource
%%EndProlog

%%BeginSetup

10.433 setmiterlimit
%%EndSetup

%%Page: 1 1
SketchDict begin
newpath
729.174 715.698 m
85.504 715.698 l
59.8024 715.698 38.9032 694.733 38.9032 668.947 c
38.9032 224.606 l
38.9032 198.846 59.8272 177.856 85.504 177.856 c
120.51 177.856 l
122.634 171.288 126.526 164.797 132.356 158.722 c
133.79 157.239 135.6 156.171 137.593 155.634 c
195.966 140.466 210.457 121.601 213.894 111.729 c
217.71 100.768 211.393 91.9656 210.992 91.4304 c
207.236 86.5616 208.089 79.6016 212.866 75.7944 c
217.71 71.9208 224.705 72.7224 228.57 77.6008 c
233.858 84.32 241.204 100.474 235.18 118.572 c
226.889 143.353 197.038 162.847 146.462 176.467 c
142.262 181.478 140.99 185.603 140.99 188.968 c
140.99 189.025 l
141.007 193.51 143.826 198.018 148.888 201.909 c
149.056 202.018 149.23 202.136 149.365 202.253 c
150.909 203.389 152.537 204.407 154.234 205.299 c
154.65 205.53 155.074 205.744 155.506 205.942 c
157.639 207.021 160.107 207.849 162.542 208.728 c
166.424 209.666 173.435 210.92 184.579 210.92 c
204.114 210.92 226.913 207.064 252.297 199.558 c
256.546 197.7 260.788 195.778 265.071 193.484 c
266.368 192.79 267.657 192.054 268.962 191.292 c
274.341 188.264 279.722 184.95 285.142 181.211 c
285.61 180.877 286.062 180.65 286.53 180.315 c
371.91 120.169 362.381 89.8168 362.448 89.8168 c
359.57 84.3528 361.645 77.5592 367.091 74.664 c
368.695 73.8148 370.481 73.3697 372.295 73.3672 c
376.319 73.3672 380.185 75.5432 382.159 79.3504 c
385.673 86.0104 397.353 119.558 326.522 177.873 c
524.086 177.873 l
453.239 119.542 464.886 85.9848 468.4 79.3504 c
470.459 75.4768 474.49 73.1504 478.642 73.1504 c
480.387 73.1477 482.106 73.5787 483.644 74.4048 c
489.098 77.2904 491.324 83.7672 488.454 89.2296 c
488.338 89.5224 478.314 119.877 564.128 180.315 c
570.102 184.531 576.05 188.163 581.983 191.476 c
583.054 192.078 584.149 192.708 585.221 193.284 c
589.688 195.66 594.089 197.676 598.506 199.609 c
623.806 207.064 646.563 210.921 666.058 210.921 c
677.218 210.921 684.204 209.641 688.044 208.745 c
690.504 207.874 693.022 207.022 695.148 205.918 c
695.566 205.717 695.95 205.517 696.353 205.341 c
698.226 204.329 699.991 203.258 701.489 202.093 c
701.689 201.952 l
706.802 198.061 709.613 193.536 709.638 189.034 c
709.638 188.968 709.68 188.916 709.68 188.85 c
709.638 185.536 708.324 181.436 704.192 176.467 c
653.592 162.847 623.765 143.354 615.482 118.571 c
609.426 100.475 616.796 84.32 622.091 77.6008 c
623.919 75.2668 626.605 73.762 629.55 73.4226 c
632.495 73.0831 635.453 73.9373 637.763 75.7944 c
642.607 79.6176 643.41 86.6616 639.57 91.5144 c
639.502 91.5984 632.935 100.382 636.642 111.452 c
639.946 121.398 654.312 140.374 713.035 155.652 c
715.04 156.171 716.858 157.244 718.281 158.748 c
724.129 164.838 728.036 171.381 730.135 177.989 c
755.343 178.542 775.682 199.206 775.682 224.625 c
775.682 668.947 l
775.758 694.733 754.851 715.699 729.174 715.699 c
729.174 715.698 l
closepath
254.396 287.984 m
268.176 252.301 259.692 231.978 253.902 223.336 c
253.902 223.352 253.886 223.352 253.861 223.352 c
252.866 223.755 251.878 224.115 250.891 224.491 c
237.563 229.536 224.704 232.716 212.531 234.381 c
211.486 234.505 210.431 234.666 209.377 234.8 c
203.67 235.452 198.132 235.802 192.769 235.836 c
191.564 235.836 190.401 235.77 189.196 235.719 c
184.762 235.61 180.445 235.293 176.329 234.782 c
175.241 234.647 174.121 234.548 173.049 234.396 c
172.179 234.263 171.376 234.046 170.523 233.903 c
174.422 252.45 177.048 279.867 164.884 298.215 c
151.849 317.978 148.804 378.818 164.658 424.766 c
171.469 444.57 163.253 480.318 157.446 500.75 c
256.814 500.75 l
261.014 485.942 268.175 448.309 251.359 400.796 c
250.154 397.483 l
242.006 374.744 231.866 346.448 254.396 287.984 c
closepath
685.836 298.24 m
673.646 279.868 676.282 252.477 680.164 233.903 c
679.294 234.079 678.49 234.279 677.603 234.396 c
676.883 234.505 676.122 234.548 675.362 234.665 c
670.743 235.292 665.874 235.627 660.829 235.737 c
660.165 235.775 659.501 235.797 658.837 235.802 c
640.181 235.894 619.055 232.18 596.809 223.336 c
591.002 231.937 582.518 252.267 596.298 287.984 c
618.846 346.49 608.663 374.786 600.498 397.542 c
599.335 400.798 l
582.518 448.326 589.714 485.942 593.905 500.75 c
693.274 500.75 l
687.442 480.319 679.226 444.57 686.062 424.766 c
701.866 378.776 698.854 317.91 685.836 298.241 c
685.836 298.24 l
closepath
730.136 200.294 m
728.639 204.603 726.27 208.778 722.966 212.644 c
722.498 213.162 721.937 213.648 721.477 214.15 c
721.293 214.35 721.092 214.501 720.933 214.684 c
719.285 216.391 717.428 217.998 715.394 219.546 c
714.755 220.048 714.102 220.533 713.437 221.001 c
711.789 222.148 710.083 223.209 708.325 224.179 c
707.563 224.624 706.918 225.142 706.107 225.569 c
705.865 225.703 705.555 225.77 705.304 225.902 c
705.287 225.928 705.262 225.928 705.238 225.944 c
700.996 240.286 694.696 271.208 704.459 285.85 c
723.033 313.96 724.305 382.288 707.179 432.111 c
702.56 445.531 709.747 478.528 716.582 500.782 c
720.958 500.782 l
727.124 500.782 732.118 505.794 732.118 511.977 c
732.118 518.15 727.124 523.17 720.958 523.17 c
576.253 523.17 l
570.087 523.17 565.083 518.15 565.083 511.977 c
565.083 507.626 567.602 503.977 571.2 502.121 c
566.18 482.158 560.792 442.753 578.278 393.34 c
579.482 389.952 l
586.762 369.722 595.002 346.79 575.466 296.114 c
559.613 255.053 567.92 228.288 576.362 213.948 c
568.925 209.998 561.404 205.472 553.849 200.326 c
553.831 200.293 l
297.024 200.293 l
296.312 200.794 295.602 201.13 294.857 201.615 c
288.939 205.607 282.836 209.318 276.568 212.734 c
275.84 213.127 275.096 213.63 274.334 214.03 c
282.784 228.387 291.066 255.135 275.23 296.13 c
255.694 346.714 263.926 369.629 271.171 389.884 c
272.393 393.308 l
289.878 442.735 284.498 482.108 279.47 502.07 c
283.085 503.936 285.611 507.583 285.611 511.934 c
285.611 518.116 280.609 523.128 274.451 523.128 c
129.763 523.128 l
123.597 523.128 118.602 518.116 118.602 511.934 c
118.602 505.751 123.597 500.73 129.762 500.73 c
134.13 500.73 l
140.948 478.485 148.151 445.478 143.542 432.059 c
126.674 383.166 127.972 313.475 146.261 285.806 c
155.933 271.222 149.674 240.234 145.458 225.902 c
145.19 225.744 144.838 225.66 144.571 225.518 c
143.667 225.057 142.957 224.488 142.128 224.02 c
140.455 223.049 138.848 222.096 137.35 221.041 c
136.622 220.522 135.903 219.987 135.185 219.452 c
133.243 217.946 131.453 216.372 129.846 214.726 c
129.628 214.499 129.378 214.281 129.16 214.048 c
128.692 213.579 128.131 213.11 127.704 212.625 c
126.349 211.028 125.278 209.345 124.208 207.689 c
124.178 207.63 124.138 207.577 124.09 207.531 c
122.618 205.163 121.362 202.72 120.492 200.227 c
85.488 200.227 l
72.0848 200.227 61.208 211.145 61.208 224.582 c
61.208 668.947 l
61.208 682.367 72.1064 693.294 85.488 693.294 c
729.159 693.294 l
742.528 693.294 753.404 682.367 753.404 668.947 c
753.404 224.606 l
753.421 224.606 l
753.421 211.505 743.062 200.813 730.137 200.293 c
730.136 200.294 l
closepath
383.7 552.922 m
383.7 559.114 378.697 564.133 372.539 564.133 c
334.69 564.133 302.613 587.61 287.177 598.895 c
283.63 601.497 280.834 603.505 278.919 604.651 c
276.374 606.172 273.326 606.613 270.454 605.877 c
267.582 605.14 265.123 603.286 263.625 600.727 c
260.47 595.423 262.211 588.546 267.507 585.383 c
269.004 584.463 271.213 582.856 274.024 580.765 c
291.351 568.09 327.41 541.702 372.538 541.702 c
378.696 541.728 383.7 546.747 383.7 552.922 c
closepath
543.69 604.651 m
541.791 603.505 538.98 601.497 535.408 598.895 c
519.998 587.626 487.912 564.15 450.062 564.15 c
443.905 564.15 438.901 559.13 438.901 552.946 c
438.901 546.763 443.904 541.743 450.062 541.743 c
495.19 541.743 531.25 568.114 548.577 580.798 c
551.396 582.856 553.606 584.514 555.119 585.408 c
560.415 588.562 562.155 595.44 559.01 600.752 c
555.83 606.082 548.978 607.839 543.69 604.651 c
closepath
487.042 300.256 m
411.903 334.081 l
408.827 335.465 405.29 335.383 402.282 333.856 c
335.826 300.038 l
330.322 297.235 328.13 290.483 330.924 284.962 c
333.686 279.45 340.412 277.298 345.925 280.026 c
407.61 311.434 l
477.862 279.809 l
479.3 279.155 480.861 278.818 482.44 278.821 c
486.682 278.821 490.773 281.256 492.622 285.43 c
495.19 291.07 492.673 297.696 487.042 300.256 c
closepath
0 0 0 rgb
F
%%PageTrailer
showpage
%%Trailer
end
%%DocumentSuppliedResources: procset Linux-sK-Procset 1.0 2
%%EOF
